name: CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  pre-commit:
    name: Pre-commit
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5433:5432
        options: >-
          --health-cmd "pg_isready -U postgres" --health-interval 10s --health-timeout 5s --health-retries 5

    env:
      DB_HOST: 127.0.0.1
      DB_PORT: 5433
      DJANGO_SETTINGS_MODULE: movie_finder_django.settings

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: '1.8.3'

      - name: Install dependencies
        run: poetry install

      - name: Run migrations
        run: poetry run python manage.py migrate

      - name: Run pre-commit
        run: poetry run pre-commit run --all-files

  tests:
    name: Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5433:5432
        options: >-
          --health-cmd "pg_isready -U postgres" --health-interval 10s --health-timeout 5s --health-retries 5

    env:
      DB_HOST: 127.0.0.1
      DB_PORT: 5433
      DJANGO_SETTINGS_MODULE: movie_finder_django.settings

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: '1.8.3'

      - name: Install dependencies
        run: poetry install

      - name: Run migrations
        run: poetry run python manage.py migrate

      - name: Run tests with coverage
        run: |
          poetry run coverage run -m pytest
          poetry run coverage report -m
